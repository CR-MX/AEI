// <auto-generated />
using System;
using CitasMedicas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CitasMedicas.Migrations
{
    [DbContext(typeof(CitasContext))]
    partial class CitasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CitasMedicas.Models.Doctor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Cedula");

                    b.Property<string>("Dirección");

                    b.Property<string>("Disponibilidad");

                    b.Property<string>("Nombres");

                    b.Property<int>("Numero");

                    b.Property<string>("Turno");

                    b.HasKey("ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("CitasMedicas.Models.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Dirección");

                    b.Property<int>("Edad");

                    b.Property<string>("Nombres");

                    b.Property<int>("Numero");

                    b.HasKey("ID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CitasMedicas.Models.Recepcionista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Dirección");

                    b.Property<string>("Nombres");

                    b.Property<int>("Numero");

                    b.HasKey("ID");

                    b.ToTable("Recepcionistas");
                });

            modelBuilder.Entity("CitasMedicas.Models.Receta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("RegistrosID");

                    b.HasKey("ID");

                    b.HasIndex("RegistrosID");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("CitasMedicas.Models.Registro", b =>
                {
                    b.Property<int>("RegistrosID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Detalles");

                    b.Property<int>("DoctorID");

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("PacienteID");

                    b.Property<int>("RecepcionistaID");

                    b.HasKey("RegistrosID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PacienteID");

                    b.HasIndex("RecepcionistaID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CitasMedicas.Models.Receta", b =>
                {
                    b.HasOne("CitasMedicas.Models.Registro")
                        .WithMany("Recetas")
                        .HasForeignKey("RegistrosID");
                });

            modelBuilder.Entity("CitasMedicas.Models.Registro", b =>
                {
                    b.HasOne("CitasMedicas.Models.Doctor")
                        .WithMany("Registros")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CitasMedicas.Models.Paciente")
                        .WithMany("Registros")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CitasMedicas.Models.Recepcionista")
                        .WithMany("Registros")
                        .HasForeignKey("RecepcionistaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
